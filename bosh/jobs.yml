jobs:
- name: alertmanager
  templates:
  - name: alertmanager
    release: prometheus
  instances: 1
  disk_pool: prometheus_small
  resource_pool: small_z1
  networks:
  - name: prometheus1
  properties:
    alertmanager:
      route:
        receiver: default-receiver
      receivers:
      - name: default-receiver

- name: prometheus
  templates:
  - name: prometheus
    release: prometheus
  - name: pushgateway
    release: prometheus
  - name: bosh_exporter
    release: prometheus
  - name: firehose_exporter
    release: prometheus
  - name: kube_state_metrics_exporter
    release: prometheus
  - name: bosh_alerts
    release: prometheus
  - name: cloudfoundry_alerts
    release: prometheus
  # - name: collectd_exporter
  #   release: prometheus
  instances: 1
  disk_pool: prometheus_large
  resource_pool: small_z1
  networks:
  - name: prometheus1
  properties:
    prometheus:
      rule_files:
      - /var/vcap/packages/bosh_alerts/*.alerts
      - /var/vcap/packages/cloudfoundry_alerts/*.alerts
      scrape_configs:
      - job_name: prometheus
        static_configs:
        - targets:
          - localhost:9090
      - job_name: pushgateway
        static_configs:
        - targets:
          - localhost:9091
      - job_name: bosh
        scrape_interval: 1m
        scrape_timeout: 1m
        static_configs:
        - targets:
          - localhost:9190
      - job_name: firehose
        static_configs:
        - targets:
          - localhost:9186
      - job_name: kube_state_metrics_exporter
        static_configs:
        - targets:
          - localhost:9188
      # - job_name: collectd
      #   static_configs:
      #   - targets:
      #     - localhost:9103

- name: grafana
  templates:
  - name: grafana
    release: prometheus
  - name: bosh_dashboards
    release: prometheus
  - name: cloudfoundry_dashboards
    release: prometheus
  - name: kubernetes_dashboards
    release: prometheus
  instances: 1
  disk_pool: prometheus_small
  resource_pool: small_z1
  networks:
  - name: prometheus1
  properties:
    grafana:
      auth:
        generic_oauth:
          enabled: true
          allow_sign_up: true
          scopes: openid,metrics.read
      dashboards:
        json:
          enabled: true
      prometheus:
        dashboard_files:
        # Bosh dashboards
        - /var/vcap/packages/bosh_dashboards/bosh_deployments.json
        - /var/vcap/packages/bosh_dashboards/bosh_jobs.json
        - /var/vcap/packages/bosh_dashboards/bosh_overview.json
        - /var/vcap/packages/bosh_dashboards/bosh_processes.json
        - /var/vcap/packages/bosh_dashboards/prometheus_bosh_exporter.json
        # Cloudfoundry dashboards
        - /var/vcap/packages/cloudfoundry_dashboards/cf_apps_events.json
        - /var/vcap/packages/cloudfoundry_dashboards/cf_apps_latency.json
        - /var/vcap/packages/cloudfoundry_dashboards/cf_apps_requests.json
        - /var/vcap/packages/cloudfoundry_dashboards/cf_apps_system.json
        - /var/vcap/packages/cloudfoundry_dashboards/cf_bbs.json
        - /var/vcap/packages/cloudfoundry_dashboards/cf_cc.json
        - /var/vcap/packages/cloudfoundry_dashboards/cf_cells_capacity.json
        - /var/vcap/packages/cloudfoundry_dashboards/cf_component_metrics.json
        - /var/vcap/packages/cloudfoundry_dashboards/cf_diego_auctions.json
        - /var/vcap/packages/cloudfoundry_dashboards/cf_diego_health.json
        - /var/vcap/packages/cloudfoundry_dashboards/cf_doppler_server.json
        - /var/vcap/packages/cloudfoundry_dashboards/cf_etcd.json
        - /var/vcap/packages/cloudfoundry_dashboards/cf_etcd_operations.json
        - /var/vcap/packages/cloudfoundry_dashboards/cf_garden_linux.json
        - /var/vcap/packages/cloudfoundry_dashboards/cf_kpis.json
        - /var/vcap/packages/cloudfoundry_dashboards/cf_lrps_tasks.json
        - /var/vcap/packages/cloudfoundry_dashboards/cf_metron_agent.json
        - /var/vcap/packages/cloudfoundry_dashboards/cf_metron_agent_doppler.json
        - /var/vcap/packages/cloudfoundry_dashboards/cf_organization_memory_quotas.json
        - /var/vcap/packages/cloudfoundry_dashboards/cf_organization_summary.json
        - /var/vcap/packages/cloudfoundry_dashboards/cf_route_emitter.json
        - /var/vcap/packages/cloudfoundry_dashboards/cf_router.json
        - /var/vcap/packages/cloudfoundry_dashboards/cf_space_summary.json
        - /var/vcap/packages/cloudfoundry_dashboards/cf_summary.json
        - /var/vcap/packages/cloudfoundry_dashboards/cf_uaa.json
        - /var/vcap/packages/cloudfoundry_dashboards/prometheus_cf_exporter.json
        - /var/vcap/packages/cloudfoundry_dashboards/prometheus_firehose_exporter.json
        # Kubernetes dashboards
        - /var/vcap/packages/kubernetes_dashboards/kubernetes_admission_quota_controller.json
        - /var/vcap/packages/kubernetes_dashboards/kubernetes_apiserver_latencies.json
        - /var/vcap/packages/kubernetes_dashboards/kubernetes_apiserver_requests.json
        - /var/vcap/packages/kubernetes_dashboards/kubernetes_daemonsets.json
        - /var/vcap/packages/kubernetes_dashboards/kubernetes_deployments.json
        - /var/vcap/packages/kubernetes_dashboards/kubernetes_nodes_capacity.json
        - /var/vcap/packages/kubernetes_dashboards/kubernetes_nodes_health.json
        - /var/vcap/packages/kubernetes_dashboards/kubernetes_nodes_info.json
        - /var/vcap/packages/kubernetes_dashboards/kubernetes_pods.json
        - /var/vcap/packages/kubernetes_dashboards/kubernetes_pods_containers.json
        - /var/vcap/packages/kubernetes_dashboards/kubernetes_rest_client.json
        - /var/vcap/packages/kubernetes_dashboards/kubernetes_ssh_tunnels.json

- name: nginx
  templates:
  - name: nginx
    release: prometheus
  instances: 1
  disk_pool: prometheus_small
  resource_pool: small_z1_public
  networks:
  - name: prometheus1
  properties:
    nginx:
      prometheus:
        http_port: 80
        server_name: (( param "specify prometheus server name" ))
      alertmanager:
        http_port: 80
        server_name: (( param "specify alertmanager server name" ))
      grafana:
        http_port: 80
        server_name: (( param "specify grafana server name" ))

networks: (( param "please set networks" ))

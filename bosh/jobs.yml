instance_groups:
- name: alertmanager
  instances: 1
  vm_type: (( concat meta.environment "-prometheus" ))
  persistent_disk_type: (( concat meta.environment "-prometheus-small" ))
  stemcell: default
  azs: (( grab meta.azs ))
  networks:
  - name: (( concat meta.environment "-monitoring" ))
  jobs:
  - name: alertmanager
    release: prometheus
    properties:
      alertmanager:
        data:
          retention: 720h
        route:
          receiver: default-receiver
        receivers:
        - name: default-receiver

- name: prometheus
  instances: 1
  vm_type: (( concat meta.environment "-prometheus" ))
  persistent_disk_type: (( concat meta.environment "-prometheus-large" ))
  stemcell: default
  azs: (( grab meta.azs ))
  networks:
  - name: (( concat meta.environment "-monitoring" ))
  jobs:
  - name: prometheus
    release: prometheus
    properties:
      prometheus:
        storage:
          local:
            retention: 720h
        rule_files:
        - /var/vcap/jobs/bosh_alerts/*.alerts
        - /var/vcap/jobs/cloudfoundry_alerts/*.alerts
        - /var/vcap/jobs/kubernetes_alerts/*.alerts
        - /var/vcap/jobs/elasticsearch_alerts/*.alerts
        - /var/vcap/jobs/concourse_alerts/*.alerts
        - /var/vcap/jobs/prometheus_alerts/*.alerts
        custom_rules:
        - (( file "bosh/alerts/kubernetes_broker.alerts" ))
        - (( file "bosh/alerts/logsearch_backup.alerts" ))
        - (( file "bosh/alerts/awslogs.alerts" ))
        scrape_configs:
        - job_name: prometheus
          static_configs:
          - targets:
            - localhost:9090
        - job_name: pushgateway
          static_configs:
          - targets:
            - localhost:9091
        - job_name: bosh
          scrape_interval: 1m
          scrape_timeout: 1m
          static_configs:
          - targets:
            - localhost:9190
        - job_name: firehose
          static_configs:
          - targets:
            - localhost:9186
        - job_name: kube_state_metrics_exporter
          static_configs:
          - targets:
            - localhost:9188
        - job_name: influxdb_exporter
          static_configs:
          - targets:
            - localhost:9122
        - job_name: elasticsearch_exporter
          static_configs:
          - targets:
            - localhost:9114
        - job_name: node
          file_sd_configs:
          - files:
            - /var/vcap/store/bosh_exporter/bosh_target_groups.json
          relabel_configs:
          - source_labels: [__meta_bosh_job_process_name]
            regex: node_exporter
            action: keep
          - source_labels: [__address__]
            regex: "(.*)"
            target_label: __address__
            replacement: "${1}:9100"
  - name: pushgateway
    release: prometheus
  - name: bosh_exporter
    release: prometheus
    properties:
      bosh_exporter:
        metrics:
          environment: (( grab meta.environment ))
  - name: firehose_exporter
    release: prometheus
    properties:
      firehose_exporter:
        uaa:
          url: (( concat "https://login." meta.domain ))
        doppler:
          url: (( concat "wss://doppler." meta.domain ":443" ))
          subscription_id: prometheus
        metrics:
          environment: (( grab meta.environment ))
  - name: kube_state_metrics_exporter
    release: prometheus
  - name: influxdb_exporter
    release: prometheus
  - name: elasticsearch_exporter
    release: prometheus
    properties:
      elasticsearch_exporter:
        es:
          all: true
  - name: bosh_alerts
    release: prometheus
  - name: cloudfoundry_alerts
    release: prometheus
  - name: kubernetes_alerts
    release: prometheus
  - name: elasticsearch_alerts
    release: prometheus
  - name: concourse_alerts
    release: prometheus
  - name: prometheus_alerts
    release: prometheus

- name: grafana
  instances: 1
  vm_type: (( concat meta.environment "-prometheus" ))
  persistent_disk_type: (( concat meta.environment "-prometheus-small" ))
  stemcell: default
  azs: (( grab meta.azs ))
  networks:
  - name: (( concat meta.environment "-monitoring" ))
  jobs:
  - name: grafana
    release: prometheus
    properties:
      grafana:
        server:
          root_url: (( concat "https://grafana." meta.domain ))
        auth:
          generic_oauth:
            enabled: true
            allow_sign_up: true
            scopes: openid,metrics.read
            auth_url: https://opslogin.fr.cloud.gov/oauth/authorize
            token_url: https://opslogin.fr.cloud.gov/oauth/token
            api_url: https://opslogin.fr.cloud.gov/userinfo
        dashboards:
          json:
            enabled: true
        prometheus:
          dashboard_files:
          - /var/vcap/jobs/bosh_dashboards/*.json
          - /var/vcap/jobs/system_dashboards/*.json
          - /var/vcap/jobs/cloudfoundry_dashboards/*.json
          - /var/vcap/jobs/kubernetes_dashboards/*.json
          - /var/vcap/jobs/elasticsearch_dashboards/*.json
          - /var/vcap/jobs/concourse_dashboards/*.json
          - /var/vcap/jobs/prometheus_dashboards/*.json
  - name: bosh_dashboards
    release: prometheus
  - name: system_dashboards
    release: prometheus
  - name: cloudfoundry_dashboards
    release: prometheus
  - name: kubernetes_dashboards
    release: prometheus
  - name: elasticsearch_dashboards
    release: prometheus
  - name: concourse_dashboards
    release: prometheus
  - name: prometheus_dashboards
    release: prometheus

- name: nginx
  instances: 1
  vm_type: (( concat meta.environment "-prometheus" ))
  persistent_disk_type: (( concat meta.environment "-prometheus-small" ))
  vm_extensions:
  - (( concat meta.environment "-prometheus-lb" ))
  stemcell: default
  azs: (( grab meta.azs ))
  networks:
  - name: (( concat meta.environment "-monitoring" ))
  jobs:
  - name: nginx
    release: prometheus
    properties:
      nginx:
        prometheus:
          http_port: 80
          server_name: (( concat "prometheus." meta.domain ))
        alertmanager:
          http_port: 80
          server_name: (( concat "alertmanager." meta.domain ))
        grafana:
          http_port: 80
          server_name: (( concat "grafana." meta.domain ))

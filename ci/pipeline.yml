---
groups:
- name: deployment
  jobs:
  - deploy-prometheus-staging
  - deploy-prometheus-production
- name: checks
  jobs:
  - awslogs-check

jobs:
- name: awslogs-check
  serial_groups: [production]
  plan:
  - aggregate:
    - get: awslogs-timer
      trigger: true
    - get: prometheus-config
      resource: prometheus-config
  - task: awslogs
    file: prometheus-config/ci/awslogs.yml
    tags: [iaas]
    params:
      AWS_DEFAULT_REGION: {{aws-region}}
      GATEWAY_HOST: {{gateway-host}}
      HEARTBEAT_GROUP: /var/log/syslog
  - put: slack
    params:
      channel: {{slack-channel}}
      username: {{slack-username}}
      icon_url: {{slack-icon-url}}
      text: |
        :flashing-alert: Instances should be stopped due to failure to log, but that's commented out pending SCR approval!
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      text_file: stopping/instance-id

- name: deploy-prometheus-staging
  serial: true
  plan:
  - aggregate:
    - get: master-bosh-root-cert
    - get: prometheus-config
      trigger: true
    - get: common
      resource: common-staging
      trigger: true
    - get: prometheus-release
      trigger: true
    - get: prometheus-stemcell
      trigger: true
    - get: terraform-yaml
    - get: pipeline-tasks
  - task: prometheus-manifest
    params:
      LOGSEARCH_FILE_SIZE_THRESHOLD: 25000
      LOGSEARCH_LOG_COUNT_THRESHOLD: 300
      LOGSEARCH_RATIO_THRESHOLD: 50
    config: &manifest-config
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: 18fgsa/concourse-task
      inputs:
      - name: prometheus-config
      - name: terraform-yaml
      - name: common
      outputs:
      - name: prometheus-manifest
      run:
        path: sh
        args:
        - -exc
        - |
          erb prometheus-config/bosh/alerts/logsearch_backup.alerts.erb > prometheus-config/bosh/alerts/logsearch_backup.alerts
          prometheus-config/bosh/generate-manifest.sh \
            prometheus-config/bosh/infrastructure-staging.yml \
            terraform-yaml/state.yml \
            common/secrets.yml \
            > prometheus-manifest/manifest.yml
  - &lint-manifest
    task: lint-manifest
    file: pipeline-tasks/lint-manifest.yml
    input_mapping:
      pipeline-config: prometheus-config
      lint-manifest: prometheus-manifest
  - put: prometheus-staging-deployment
    params: &deploy-params
      cert: master-bosh-root-cert/master-bosh.crt
      manifest: prometheus-manifest/manifest.yml
      releases:
      - prometheus-release/*.tgz
      stemcells:
      - prometheus-stemcell/*.tgz
  on_failure:
    put: slack
    params:
      text: |
        :x: FAILED to deploy prometheus on staging
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: {{slack-channel}}
      username: {{slack-username}}
      icon_url: {{slack-icon-url}}
  on_success:
    put: slack
    params:
      text: |
        :white_check_mark: Successfully deployed prometheus on staging
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: {{slack-channel}}
      username: {{slack-username}}
      icon_url: {{slack-icon-url}}

- name: deploy-prometheus-production
  serial: true
  serial_groups: [production]
  plan:
  - aggregate:
    - get: master-bosh-root-cert
    - get: prometheus-config
      passed: [deploy-prometheus-staging]
      trigger: true
    - get: common
      resource: common-production
      trigger: true
    - get: prometheus-release
      passed: [deploy-prometheus-staging]
      trigger: true
    - get: prometheus-stemcell
      passed: [deploy-prometheus-staging]
      trigger: true
    - get: terraform-yaml
    - get: pipeline-tasks
  - task: prometheus-manifest
    params:
      LOGSEARCH_FILE_SIZE_THRESHOLD: 3e+06
      LOGSEARCH_LOG_COUNT_THRESHOLD: 30000
      LOGSEARCH_RATIO_THRESHOLD: 50
    config:
      <<: *manifest-config
      run:
        path: sh
        args:
        - -exc
        - |
          erb prometheus-config/bosh/alerts/logsearch_backup.alerts.erb > prometheus-config/bosh/alerts/logsearch_backup.alerts
          prometheus-config/bosh/generate-manifest.sh \
            prometheus-config/bosh/infrastructure-production.yml \
            terraform-yaml/state.yml \
            common/secrets.yml \
            > prometheus-manifest/manifest.yml
  - *lint-manifest
  - put: prometheus-production-deployment
    params: *deploy-params
  on_failure:
    put: slack
    params:
      text: |
        :x: FAILED to deploy prometheus on production
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: {{slack-channel}}
      username: {{slack-username}}
      icon_url: {{slack-icon-url}}
  on_success:
    put: slack
    params:
      text: |
        :white_check_mark: Successfully deployed prometheus on production
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: {{slack-channel}}
      username: {{slack-username}}
      icon_url: {{slack-icon-url}}

resources:
- name: master-bosh-root-cert
  type: s3-iam
  source:
    bucket: {{prometheus-production-private-bucket}}
    region_name: {{aws-region}}
    versioned_file: master-bosh.crt

- name: common-staging
  type: cg-common
  source:
    region: {{prometheus-staging-private-region}}
    bucket_name: {{prometheus-staging-private-bucket}}
    secrets_file: prometheus-staging.yml
    secrets_passphrase: {{prometheus-staging-private-passphrase}}
    bosh_cert: bosh-tooling.pem

- name: common-production
  type: cg-common
  source:
    region: {{prometheus-production-private-region}}
    bucket_name: {{prometheus-production-private-bucket}}
    secrets_file: prometheus-production.yml
    secrets_passphrase: {{prometheus-production-private-passphrase}}
    bosh_cert: bosh-tooling.pem

- name: prometheus-release
  type: bosh-io-release
  source:
    repository: cloudfoundry-community/prometheus-boshrelease

- name: prometheus-config
  type: git
  source:
    uri: {{cg-deploy-prometheus-git-url}}
    branch: {{cg-deploy-prometheus-git-branch}}

- name: prometheus-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-aws-xen-hvm-ubuntu-trusty-go_agent

- name: prometheus-staging-deployment
  type: 18f-bosh-deployment
  source:
    target: {{prometheus-staging-deployment-bosh-target}}
    client_id: {{prometheus-staging-deployment-bosh-uaa-client-id}}
    client_secret: {{prometheus-staging-deployment-bosh-uaa-client-secret}}
    deployment: {{prometheus-staging-deployment-bosh-deployment}}

- name: prometheus-production-deployment
  type: 18f-bosh-deployment
  source:
    target: {{prometheus-production-deployment-bosh-target}}
    client_id: {{prometheus-production-deployment-bosh-uaa-client-id}}
    client_secret: {{prometheus-production-deployment-bosh-uaa-client-secret}}
    deployment: {{prometheus-production-deployment-bosh-deployment}}

- name: pipeline-tasks
  type: git
  source:
    uri: {{pipeline-tasks-git-url}}
    branch: {{pipeline-tasks-git-branch}}

- name: slack
  type: slack-notification
  source:
    url: {{slack-webhook-url}}

- name: terraform-yaml
  type: s3-iam
  source:
    bucket: {{tf-state-bucket-tooling}}
    versioned_file: {{tf-state-file-tooling}}
    region_name: {{aws-region}}

- name: awslogs-timer
  type: time
  source:
    interval: 30m

resource_types:
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource

- name: 18f-bosh-deployment
  type: docker-image
  source:
    repository: 18fgsa/bosh-deployment-resource

- name: cg-common
  type: docker-image
  source:
    repository: 18fgsa/cg-common-resource

- name: s3-iam
  type: docker-image
  source:
    repository: 18fgsa/s3-resource

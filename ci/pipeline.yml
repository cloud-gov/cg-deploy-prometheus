---
groups:
- name: deployment
  jobs:
  - deploy-prometheus-staging
  - deploy-prometheus-production
- name: checks
  jobs:
  - awslogs-check
  - aws-mfa-check
  - aws-rds-storage-check
  - domain-broker-certs
  - concourse-has-auth-check
  - prometheus-down-check-staging
  - prometheus-down-check-production

jobs:
- name: awslogs-check
  serial_groups: [production]
  plan:
  - in_parallel:
    - get: prometheus-check-timer
      trigger: true
    - get: prometheus-config
      resource: prometheus-config
  - task: awslogs
    file: prometheus-config/ci/awslogs.yml
    tags: [iaas]
    params:
      AWS_DEFAULT_REGION: ((aws-region))
      GATEWAY_HOST: prometheus-production.service.cf.internal
      HEARTBEAT_GROUP: /var/log/syslog

- name: aws-rds-storage-check
  serial_groups: [production]
  plan:
  - in_parallel:
    - get: prometheus-check-timer
      trigger: true
    - get: prometheus-config
      resource: prometheus-config
  - task: aws-rds-storage-check
    file: prometheus-config/ci/aws-rds-storage.yml
    params:
      AWS_DEFAULT_REGION: ((aws-region))
      AWS_ACCESS_KEY_ID: ((aws-rds-access-key-id))
      AWS_SECRET_ACCESS_KEY: ((aws-rds-secret-access-key))
      GATEWAY_HOST: http://prometheus-production.service.cf.internal

- name: aws-mfa-check
  serial_groups: [production]
  plan:
  - in_parallel:
    - get: prometheus-check-timer
      trigger: true
    - get: prometheus-config
      resource: prometheus-config
  - task: aws-mfa
    file: prometheus-config/ci/aws-mfa.yml
    tags: [iaas]
    params:
      AWS_DEFAULT_REGION: ((aws-region))
      GATEWAY_HOST: prometheus-production.service.cf.internal

- name: domain-broker-certs
  serial_groups: [production]
  plan:
  - in_parallel:
    - get: prometheus-check-timer
      trigger: true
    - get: prometheus-config
      resource: prometheus-config
  - in_parallel:
    - task: domain-broker-certs-development
      file: prometheus-config/ci/domain-broker-certs.yml
      tags: [iaas]
      params:
        PREFIX: development-domains
        ENVIRONMENT: development
        GATEWAY_HOST: prometheus-production.service.cf.internal
        AWS_DEFAULT_REGION: ((aws-region))
    - task: domain-broker-certs-staging
      file: prometheus-config/ci/domain-broker-certs.yml
      tags: [iaas]
      params:
        PREFIX: staging-domains
        ENVIRONMENT: staging
        GATEWAY_HOST: prometheus-production.service.cf.internal
        AWS_DEFAULT_REGION: ((aws-region))
    - task: domain-broker-certs-production
      file: prometheus-config/ci/domain-broker-certs.yml
      tags: [iaas]
      params:
        PREFIX: production-domains
        ENVIRONMENT: production
        GATEWAY_HOST: prometheus-production.service.cf.internal
        AWS_DEFAULT_REGION: ((aws-region))

- name: concourse-has-auth-check
  serial_groups: [production]
  plan:
  - in_parallel:
    - get: prometheus-check-timer
      trigger: true
    - get: prometheus-config
      resource: prometheus-config
  - task: concourse-has-auth
    file: prometheus-config/ci/concourse-has-auth.yml
    params:
      CONCOURSE_URIS: "https://ci.fr-stage.cloud.gov https://ci.fr.cloud.gov"
      GATEWAY_HOST: prometheus-production.service.cf.internal

- name: prometheus-down-check-production
  serial_groups: [production]
  plan:
  - in_parallel:
    - get: prometheus-check-timer
      trigger: true
    - get: prometheus-config
  - task: prometheus-down
    file: prometheus-config/ci/prometheus-down.yml
    params:
      PROMETHEUSHOST: prometheus-production.service.cf.internal
      ALERTMANAGERHOST: alertmanager-production.service.cf.internal
    on_failure:
      do:
      - task: notify
        file: prometheus-config/ci/notify.yml
        params:
          PAGERDUTY_KEY: ((pagerduty-key))
          ALERT_MESSAGE: Prometheus seems to be down or hung!
          ALERT_SOURCE: Concourse prometheus-down-check-production
          ALERT_SEVERITY: critical
          ALERT_COMPONENT: Prometheus
      - put: notify-cloud-gov
        params:
          subject: email/subject.txt
          body: email/body.txt

- name: prometheus-down-check-staging
  serial_groups: [staging]
  plan:
  - in_parallel:
    - get: prometheus-check-timer
      trigger: true
    - get: prometheus-config
  - task: prometheus-down
    file: prometheus-config/ci/prometheus-down.yml
    params:
      PROMETHEUSHOST: prometheus-staging.service.cf.internal
      ALERTMANAGERHOST: alertmanager-staging.service.cf.internal
    on_failure:
      do:
      - task: notify
        file: prometheus-config/ci/notify.yml
        params:
          PAGERDUTY_KEY: ((pagerduty-key-staging))
          ALERT_MESSAGE: Staging Prometheus seems to be down or hung!
          ALERT_SOURCE: Concourse prometheus-down-check-staging
          ALERT_SEVERITY: warning
          ALERT_COMPONENT: Prometheus
      - put: notify-cloud-gov
        params:
          subject: email/subject.txt
          body: email/body.txt

- name: deploy-prometheus-staging
  serial: true
  plan:
  - in_parallel:
    - get: master-bosh-root-cert
    - get: prometheus-config
      trigger: true
    - get: common-staging
      trigger: true
    - get: prometheus-release
      trigger: true
    - get: oauth2-proxy-release
      trigger: true
    - get: prometheus-stemcell-xenial
      trigger: true
    - get: pipeline-tasks
  - put: prometheus-staging-deployment
    params: &deploy-params
      cert: master-bosh-root-cert/master-bosh.crt
      manifest: prometheus-config/bosh/manifest.yml
      releases:
      - prometheus-release/*.tgz
      - oauth2-proxy-release/*.tgz
      stemcells:
      - prometheus-stemcell-xenial/*.tgz
      ops_files:
      - prometheus-config/bosh/opsfiles/rules.yml
      - prometheus-config/bosh/opsfiles/staging.yml
      - prometheus-config/bosh/opsfiles/add-ops-genie.yml
      - prometheus-release/manifests/operators/alertmanager-opsgenie-receiver.yml
      vars_files:
      - prometheus-config/bosh/varsfiles/staging.yml
      - common-staging/staging-prometheus.yml
  on_failure:
    put: slack
    params:
      text: |
        :x: FAILED to deploy prometheus on staging
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))
  on_success:
    put: slack
    params:
      text: |
        :white_check_mark: Successfully deployed prometheus on staging
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))

- name: deploy-prometheus-production
  serial: true
  serial_groups: [production]
  plan:
  - in_parallel:
    - get: master-bosh-root-cert
    - get: prometheus-config
      passed: [deploy-prometheus-staging]
      trigger: true
    - get: common-production
      trigger: true
    - get: prometheus-release
      passed: [deploy-prometheus-staging]
      trigger: true
    - get: oauth2-proxy-release
      passed: [deploy-prometheus-staging]
      trigger: true
    - get: prometheus-stemcell-xenial
      passed: [deploy-prometheus-staging]
      trigger: true
    - get: pipeline-tasks
  - put: prometheus-production-deployment
    params:
      <<: *deploy-params
      ops_files:
      - prometheus-config/bosh/opsfiles/rules.yml
      - prometheus-config/bosh/opsfiles/production.yml
      vars_files:
      - prometheus-config/bosh/varsfiles/production.yml
      - common-production/production-prometheus.yml
  on_failure:
    put: slack
    params:
      text: |
        :x: FAILED to deploy prometheus on production
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))
  on_success:
    put: slack
    params:
      text: |
        :white_check_mark: Successfully deployed prometheus on production
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))

resources:
- name: master-bosh-root-cert
  type: s3-iam
  source:
    bucket: ((prometheus-production-private-bucket))
    region_name: ((aws-region))
    versioned_file: master-bosh.crt

- name: common-staging
  type: s3-iam
  source:
    region_name: ((prometheus-staging-private-region))
    bucket: ((prometheus-staging-private-bucket))
    versioned_file: staging-prometheus.yml

- name: common-production
  type: s3-iam
  source:
    region_name: ((prometheus-production-private-region))
    bucket: ((prometheus-production-private-bucket))
    versioned_file: production-prometheus.yml

- name: prometheus-release
  type: github-release
  source:
    owner: bosh-prometheus
    repository: prometheus-boshrelease
    access_token: ((github-access-token))

- name: oauth2-proxy-release
  type: s3-iam
  source:
    bucket: ((s3-bosh-releases-bucket))
    regexp: oauth2-proxy-(.*).tgz
    region_name: ((aws-region))

- name: prometheus-config
  type: git
  source:
    uri: ((cg-deploy-prometheus-git-url))
    branch: ((cg-deploy-prometheus-git-branch))

- name: prometheus-stemcell-xenial
  type: bosh-io-stemcell
  source:
    name: bosh-aws-xen-hvm-ubuntu-xenial-go_agent

- name: prometheus-staging-deployment
  type: bosh-deployment
  source:
    target: ((prometheus-staging-deployment-bosh-target))
    client: ci
    client_secret: ((tooling_bosh_uaa_ci_client_secret))
    ca_cert: ((common_ca_cert))
    deployment: prometheus-staging

- name: prometheus-production-deployment
  type: bosh-deployment
  source:
    target: ((prometheus-production-deployment-bosh-target))
    client: ci
    client_secret: ((tooling_bosh_uaa_ci_client_secret))
    ca_cert: ((common_ca_cert))
    deployment: prometheus-production

- name: pipeline-tasks
  type: git
  source:
    uri: ((pipeline-tasks-git-url))
    branch: ((pipeline-tasks-git-branch))

- name: slack
  type: slack-notification
  source:
    url: ((slack-webhook-url))

- name: prometheus-check-timer
  type: time
  source:
    interval: 30m

- name: notify-cloud-gov
  type: email
  source:
    smtp:
      host: ((smtp-host-name))
      port: ((smtp-port-number))
      username: ((smtp-username))
      password: ((smtp-password))
      ca_cert: ((smtp-certificate))
    from: no-reply@gsa.gov
    to:
      - "cloud-gov-notifications@gsa.gov"

resource_types:
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource

- name: bosh-deployment
  type: docker-image
  source:
    repository: cloudfoundry/bosh-deployment-resource

- name: s3-iam
  type: docker-image
  source:
    repository: 18fgsa/s3-resource

- name: email
  type: docker-image
  source:
    repository: pcfseceng/email-resource
